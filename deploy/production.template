apiVersion: v1
kind: Namespace
metadata:
  name: ${CI_PROJECT_NAME}
---
apiVersion: v1
kind: Secret
metadata:
  name: gitlabregistry
  namespace: ${CI_PROJECT_NAME}
data:
  .dockerconfigjson: ew0KCSJhdXRocyI6IHsNCgkJInJlZ2lzdHJ5LmdpdGxhYi5jb20iOiB7DQoJCQkiYXV0aCI6ICJaMmwwYkdGaUxXTnBMWFJ2YTJWdU9qRlhXRXRyT0ZOVU5qVmtVMnAyZFVVNGRHZG0iDQoJCX0NCgl9DQp9
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Service
metadata:
  name: ${CI_PROJECT_NAME}
  namespace: ${CI_PROJECT_NAME}
  labels:
    application: ${CI_PROJECT_NAME}
spec:
  ports:
    - protocol: TCP
      port: 3000
  selector:
    application: ${CI_PROJECT_NAME}
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: ${CI_PROJECT_NAME}-deployment
  namespace: ${CI_PROJECT_NAME}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      application: ${CI_PROJECT_NAME}
  template:
    metadata:
      labels:
        application: ${CI_PROJECT_NAME}
      annotations:
        revision: ${CI_COMMIT_SHA}
    spec:
      nodeSelector:
        zone: prod-wazzup
      containers:
        - name: ${CI_PROJECT_NAME}
          image: registry.gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:master
          imagePullPolicy: Always
      imagePullSecrets:
        - name: gitlabregistry
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${CI_PROJECT_NAME}-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.priority: "2"
spec:
  rules:
  - host: accounts.cereris.org
    http:
      paths:
      - path: /
        backend:
          serviceName: ${CI_PROJECT_NAME}
          servicePort: 3000
