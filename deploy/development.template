apiVersion: v1
kind: Namespace
metadata:
  name: accounts
---
apiVersion: v1
kind: Secret
metadata:
  name: gitlabregistry
  namespace: accounts
data:
  .dockerconfigjson: ew0KCSJhdXRocyI6IHsNCgkJInJlZ2lzdHJ5LmdpdGxhYi5jb20iOiB7DQoJCQkiYXV0aCI6ICJaMmwwYkdGaUxXTnBMWFJ2YTJWdU9qRlhXRXRyT0ZOVU5qVmtVMnAyZFVVNGRHZG0iDQoJCX0NCgl9DQp9
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Service
metadata:
  name: ${CI_PROJECT_NAME}-dev
  namespace: accounts
  labels:
    application: ${CI_PROJECT_NAME}-dev
spec:
  ports:
    - protocol: TCP
      port: 3000
  selector:
    application: ${CI_PROJECT_NAME}-dev
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: ${CI_PROJECT_NAME}-dev-deployment
  namespace: accounts
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      application: ${CI_PROJECT_NAME}-dev
  template:
    metadata:
      labels:
        application: ${CI_PROJECT_NAME}-dev
      annotations:
        revision: ${CI_COMMIT_SHA}
    spec:
      nodeSelector:
        zone: dev
      containers:
        - name: ${CI_PROJECT_NAME}-dev
          image: registry.gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:develop
          imagePullPolicy: Always
          env:
          - name: IS_DEV
            value: "true"
      imagePullSecrets:
        - name: gitlabregistry
